# Stage 1: Build Stage
FROM golang:1.22.7 as builder

# Set the working directory inside the container
WORKDIR /app

# Install Protobuf and gRPC plugins
RUN apt-get update && apt-get install -y protobuf-compiler && \
    go install google.golang.org/protobuf/cmd/protoc-gen-go@latest && \
    go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest && \
    export PATH="$PATH:$(go env GOPATH)/bin"

# Copy go.mod and go.sum to fetch dependencies
COPY go.mod go.sum ./
RUN go mod tidy

# Copy the entire source code into the container
COPY . .

# Generate Protobuf code
RUN mkdir -p pkg/proto/proto && \
    protoc --proto_path=pkg/proto \
        --go_out=pkg/proto/proto --go_opt=paths=source_relative \
        --go-grpc_out=pkg/proto/proto --go-grpc_opt=paths=source_relative \
        pkg/proto/*.proto

# Build the main server binary
RUN make release

# Stage 2: Runtime Stage
FROM debian:bookworm-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y ca-certificates && rm -rf /var/lib/apt/lists/*

# Set the working directory inside the container
WORKDIR /app

# Copy the built release binary and configuration from the builder stage
COPY --from=builder /app/bin/release/adaptodb /app/adaptodb
COPY config.yaml /app/config.yaml

# Expose necessary ports
EXPOSE 60080 60081 60082

# Set the entrypoint to the main binary
CMD ["./adaptodb"]
